{"pageProps":{"post":{"slug":"2023-03-16-terraform-project-learnings","markdownBody":"\r\nI just finished my first ever infrastructure project for a client. My Terraform skills are good enough to be dangerous, but during the development of this project I learned a lot that I would do differently next time.\r\n\r\n## Project structure\r\n\r\nHaving worked with semi-professional Terraform code before, I applied what I knew to my new project. That was mainly that we have a shared base and an overlay directory for each environment. I went with a single Terraform module for the shared infrastructure, and variables for each environment. Naively, roughly every service had their own file.\r\n\r\n```\r\n.\r\nâ”œâ”€â”€ modules\r\nâ”‚Â Â  â””â”€â”€ infrastructure\r\nâ”‚Â Â      â”œâ”€â”€ alb.tf\r\nâ”‚Â Â      â”œâ”€â”€ cache.tf\r\nâ”‚Â Â      â”œâ”€â”€ database.tf\r\nâ”‚Â Â      â”œâ”€â”€ dns.tf\r\nâ”‚Â Â      â”œâ”€â”€ ecr.tf\r\nâ”‚Â Â      â”œâ”€â”€ ecs.tf\r\nâ”‚Â Â      â”œâ”€â”€ iam.tf\r\nâ”‚Â Â      â”œâ”€â”€ logs.tf\r\nâ”‚Â Â      â”œâ”€â”€ main.tf\r\nâ”‚Â Â      â”œâ”€â”€ network.tf\r\nâ”‚Â Â      â”œâ”€â”€ secrets.tf\r\nâ”‚Â Â      â”œâ”€â”€ security.tf\r\nâ”‚Â Â      â”œâ”€â”€ ssl.tf\r\nâ”‚Â Â      â”œâ”€â”€ state.tf\r\nâ”‚Â Â      â””â”€â”€ variables.tf\r\nâ”œâ”€â”€ production\r\nâ”‚Â Â  â”œâ”€â”€ main.tf\r\nâ”‚Â Â  â””â”€â”€ secrets.tf\r\nâ””â”€â”€ staging\r\n    â”œâ”€â”€ main.tf\r\n    â””â”€â”€ secrets.tf\r\n```\r\n\r\nThis works very well, but I already started running into issues extending this setup. For my next project, I would probably find individual components and turn them into smaller reusable submodules. If I were to rewrite the project above, I would probably structure it like this (not a complete project, but I think you get the idea):\r\n\r\n```\r\n.\r\nâ”œâ”€â”€ modules\r\nâ”‚Â Â  â””â”€â”€ infrastructure\r\nâ”‚Â Â      â”œâ”€â”€ main.tf\r\nâ”‚Â Â      â”œâ”€â”€ modules\r\nâ”‚Â Â      â”‚Â Â  â”œâ”€â”€ database\r\nâ”‚Â Â      â”‚Â Â  â”‚Â Â  â”œâ”€â”€ iam.tf\r\nâ”‚Â Â      â”‚Â Â  â”‚Â Â  â”œâ”€â”€ logs.tf\r\nâ”‚Â Â      â”‚Â Â  â”‚Â Â  â”œâ”€â”€ main.tf\r\nâ”‚Â Â      â”‚Â Â  â”‚Â Â  â”œâ”€â”€ outputs.tf\r\nâ”‚Â Â      â”‚Â Â  â”‚Â Â  â”œâ”€â”€ rds.tf\r\nâ”‚Â Â      â”‚Â Â  â”‚Â Â  â””â”€â”€ variables.tf\r\nâ”‚Â Â      â”‚Â Â  â”œâ”€â”€ loadbalancer\r\nâ”‚Â Â      â”‚Â Â  â”‚Â Â  â”œâ”€â”€ alb.tf\r\nâ”‚Â Â      â”‚Â Â  â”‚Â Â  â”œâ”€â”€ logs.tf\r\nâ”‚Â Â      â”‚Â Â  â”‚Â Â  â”œâ”€â”€ main.tf\r\nâ”‚Â Â      â”‚Â Â  â”‚Â Â  â”œâ”€â”€ outputs.tf\r\nâ”‚Â Â      â”‚Â Â  â”‚Â Â  â””â”€â”€ variables.tf\r\nâ”‚Â Â      â”‚Â Â  â”œâ”€â”€ network\r\nâ”‚Â Â      â”‚Â Â  â”‚Â Â  â”œâ”€â”€ dns.tf\r\nâ”‚Â Â      â”‚Â Â  â”‚Â Â  â”œâ”€â”€ logs.tf\r\nâ”‚Â Â      â”‚Â Â  â”‚Â Â  â”œâ”€â”€ main.tf\r\nâ”‚Â Â      â”‚Â Â  â”‚Â Â  â”œâ”€â”€ outputs.tf\r\nâ”‚Â Â      â”‚Â Â  â”‚Â Â  â”œâ”€â”€ ssl.tf\r\nâ”‚Â Â      â”‚Â Â  â”‚Â Â  â”œâ”€â”€ variables.tf\r\nâ”‚Â Â      â”‚Â Â  â”‚Â Â  â””â”€â”€ vpc.tf\r\nâ”‚Â Â      â”‚Â Â  â”œâ”€â”€ service\r\nâ”‚Â Â      â”‚Â Â  â”‚Â Â  â”œâ”€â”€ ecr.tf\r\nâ”‚Â Â      â”‚Â Â  â”‚Â Â  â”œâ”€â”€ ecs.tf\r\nâ”‚Â Â      â”‚Â Â  â”‚Â Â  â”œâ”€â”€ iam.tf\r\nâ”‚Â Â      â”‚Â Â  â”‚Â Â  â”œâ”€â”€ logs.tf\r\nâ”‚Â Â      â”‚Â Â  â”‚Â Â  â”œâ”€â”€ main.tf\r\nâ”‚Â Â      â”‚Â Â  â”‚Â Â  â”œâ”€â”€ outputs.tf\r\nâ”‚Â Â      â”‚Â Â  â”‚Â Â  â””â”€â”€ variables.tf\r\nâ”‚Â Â      â”‚Â Â  â””â”€â”€ state\r\nâ”‚Â Â      â”‚Â Â      â”œâ”€â”€ locks.tf\r\nâ”‚Â Â      â”‚Â Â      â”œâ”€â”€ main.tf\r\nâ”‚Â Â      â”‚Â Â      â”œâ”€â”€ outputs.tf\r\nâ”‚Â Â      â”‚Â Â      â”œâ”€â”€ s3.tf\r\nâ”‚Â Â      â”‚Â Â      â””â”€â”€ variables.tf\r\nâ”‚Â Â      â”œâ”€â”€ main.tf\r\nâ”‚Â Â      â”œâ”€â”€ outputs.tf\r\nâ”‚Â Â      â””â”€â”€ variables.tf\r\nâ”œâ”€â”€ production\r\nâ”‚Â Â  â”œâ”€â”€ main.tf\r\nâ”‚Â Â  â””â”€â”€ secrets.tf\r\nâ””â”€â”€ staging\r\n    â”œâ”€â”€ main.tf\r\n    â””â”€â”€ secrets.tf\r\n```\r\n\r\n## Secrets\r\n\r\nI decided to use [git-crypt](https://github.com/AGWA/git-crypt) to manage secrets, but that was only before I learned about [SOPS](https://github.com/mozilla/sops). It's too late to migrate now, but if I could, I would choose SOPS for secrets any day of the week for upcoming projects. It even has a [Terraform provider](https://registry.terraform.io/providers/carlpett/sops/latest/docs), so there's no excuse not to use it. ;)\r\n\r\n## Conclusion\r\n\r\nOverall I'm pretty happy with how the project turned out, but there are some things that I learned during this project that will pay off later.\r\n\r\n---\r\n\r\nThis is post 057 of [#100DaysToOffload](https://100daystooffload.com/).\r\n","frontmatter":{"title":"Terraform project learnings","date":"2023-03-16","tags":"100DaysToOffload, infrastructure, aws, note, terraform, learnings, tech"},"tags":["100DaysToOffload","infrastructure","aws","note","terraform","learnings","tech"]},"recommendedPosts":[{"slug":"2024-09-24-installing-mssql-client-drivers-for-a-php-application","frontmatter":{"title":"Installing MSSQL Client Drivers for a PHP Application","date":"2024-09-24","tags":"guide, note, web, tech, programming, php"},"tags":["guide","note","web","tech","programming","php"]},{"slug":"2024-08-31-sentiment-analysis-using-ml-models","frontmatter":{"title":"Sentiment analysis using ML models","date":"2024-08-31","tags":"note, tech, ai"},"tags":["note","tech","ai"]},{"slug":"2024-08-03-how-embedding-models-encode-semantic-meaning","frontmatter":{"title":"How embedding models encode semantic meaning","date":"2024-08-03","tags":"note, tech, math, llm, ai"},"tags":["note","tech","math","llm","ai"]},{"slug":"2024-07-02-linkdump-llms","frontmatter":{"title":"ðŸ”— Linkdump: LLMs","date":"2024-07-02","tags":"note, tech, linkdump, llm, ai"},"tags":["note","tech","linkdump","llm","ai"]},{"slug":"2024-06-27-testing-smtp-connections","frontmatter":{"title":"Testing SMTP connections","date":"2024-06-27","tags":"infrastructure, guide, note, learnings, tech"},"tags":["infrastructure","guide","note","learnings","tech"]}]},"__N_SSG":true}