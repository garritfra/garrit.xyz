{"pageProps":{"post":{"slug":"2021-02-24-vim-terminal-strategies","markdownBody":"\nOne thing that bothered me about vim for a long time, was the lack of a terminal\ndirectly in your editor. If I'm not using Vim, I'm most definetely using VSCode\nand its built-in Terminal. After searching the webs for possible solutions, I\ncame across a couple of strategies to achive this.\n\n## Executing single commands\n\nIf you just want to issue a single command without spawning an entire shell,\nyou can just use the `:!` command:\n\n```\n:! printf \"Hello Sailor\"\n```\n\n## Vims builtin terminal\n\nI couldn't believe my eyes when I read this, but Vim ships with a builtin\nterminal! Executing `:term` will spawn it in your current buffer. How you\nintegrate it in your workflow is up to you. You could use tabs or open a\nhorizontal buffer and spawn it there. I must say that it is rather clunky to\nuse, since its literally a Vim buffer that forwards stdin and stdout to the\nbuffer, but it's there for you to use.\n\n## Vim x Tmux\n\nAnother great alternative is to set up Tmux with two windows, one for Vim and\none for your terminal, and switch between them. This works great on a minimal\nsystem, but on MacOS for example, it is easier to simply use cmd+1 and cmd+2 to\nswitch between two tabs of the Terminal application.\n\n## Pausing and resuming Vim\n\nThis one is my personal favorite. The idea comes from\n[this](https://stackoverflow.com/a/1258318/9046809) stackoverflow answer.\n\nThe plan is to pause the Vim process and resume it later. To pause Vim, you\npress `<ctrl>-z`. This sends the process in the background. Then, to resume the\nprocess, simply issue the `fg` command and Vims process resumes in the\nforeground.\n\n## Conclusion\n\nI'm sure there are many more strategies that could be added to this list. I'd be\ninterested to hear how your setup works! If you liked these techniques, you\nmight be interested in\n[@lopeztel](https://fosstodon.org/web/accounts/211905)s\n[cheat sheet](https://lopeztel.xyz/2021/02/21/my-neovim-cheatsheet/) for Vim.\n\nThis is post 014 of [#100DaysToOffload](https://100daystooffload.com/).\n","frontmatter":{"title":"Strategies to use a terminal alongside (Neo)Vim","date":"2021-02-23","tags":"vim, guide, 100DaysToOffload, tech"},"tags":["vim","guide","100DaysToOffload","tech"]},"recommendedPosts":[{"slug":"2024-09-24-installing-mssql-client-drivers-for-a-php-application","frontmatter":{"title":"Installing MSSQL Client Drivers for a PHP Application","date":"2024-09-24","tags":"guide, note, web, tech, programming, php"},"tags":["guide","note","web","tech","programming","php"]},{"slug":"2024-08-31-sentiment-analysis-using-ml-models","frontmatter":{"title":"Sentiment analysis using ML models","date":"2024-08-31","tags":"note, tech, ai"},"tags":["note","tech","ai"]},{"slug":"2024-08-03-how-embedding-models-encode-semantic-meaning","frontmatter":{"title":"How embedding models encode semantic meaning","date":"2024-08-03","tags":"note, tech, math, llm, ai"},"tags":["note","tech","math","llm","ai"]},{"slug":"2024-07-02-linkdump-llms","frontmatter":{"title":"ðŸ”— Linkdump: LLMs","date":"2024-07-02","tags":"note, tech, linkdump, llm, ai"},"tags":["note","tech","linkdump","llm","ai"]},{"slug":"2024-06-27-testing-smtp-connections","frontmatter":{"title":"Testing SMTP connections","date":"2024-06-27","tags":"infrastructure, guide, note, learnings, tech"},"tags":["infrastructure","guide","note","learnings","tech"]}]},"__N_SSG":true}