{"pageProps":{"post":{"slug":"lightweight-vpn-with-wireguard","markdownBody":"\nThis blog post has been taken over from my [collection of \"Today I Learned\" articles](https://garrit.xyz/til).\n\nYou can easily set up a private network of your devices. This way you can \"talk\" to your phone, raspberry pi etc. over an **encrypted** network, with simple IP-addresses.\n\n![](https://images.unsplash.com/photo-1505659903052-f379347d056f?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2550&q=80)\n\nFirstly, install wireguard on all of your systems. Simply install the `wireguard` package from your package manager respectively. Check out [the official installation guide](https://www.wireguard.com/install/) if you can't find the package. If you're on debian, try [this](https://wiki.debian.org/WireGuard?action=show&redirect=Wireguard) guide. There's also an app for Android, iOS and MacOS.\n\nEvery participent (Client and server) needs a key-pair. To generate this, run this command first on the server, and on all clients:\n\n```bash\nwg genkey | tee wg-private.key | wg pubkey > wg-public.key\n```\n\nIt might make sense to do this as root. This way you don't have to type `sudo` with every command.\n\n## Server Configuration\n\nYou will need to create a configuration for the server. Save this template at `/etc/wireguard/wg0.conf`, and replace the fields where needed:\n\n```conf\n[Interface]\nPrivateKey = <Server private key from wg-private.key>\nAddress = 10.0.0.1/24 # IP Address of the server. Using this IP Address, you can assign IPs ranging from 10.0.0.2 - 10.0.0.254 to your clients\nListenPort = 51820 # This is the standard port for wireguard\n\n# The following fields will take care of routing\nPostUp = iptables -A FORWARD -i %i -j ACCEPT; iptables -A FORWARD -o %i -j ACCEPT; iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE\nPostDown = iptables -D FORWARD -i %i -j ACCEPT; iptables -D FORWARD -o %i -j ACCEPT; iptables -t nat -D POSTROUTING -o eth0 -j MASQUERADE\n\n# Laptop\n[Peer]\nPublicKey = <Public Key of Laptop Client>\nAllowedIPs = 10.0.0.2/32 # The client will be reachable at this address\n\n# Android Phone\n[Peer]\nPublicKey = <Public Key of Phone Client>\nAllowedIPs = 10.0.0.3/32\n\n# ...\n```\n\nThen run `wg-quick up wg0` to start the wireguard interface with the configuration from `/etc/wireguard/wg0`.\n\n## Setting up clients\n\nSetting up clients is very similar to the server setup process. Generate a keypair on each client, save the following config to `/etc/wireguard/wg0.conf` and replace the nessessary fields:\n\n```conf\n[Interface]\nPrivateKey = <Client Private Key from wg-private.key>\nAddress = 10.0.0.2/32 # The fixed address of the client. Needs to be specified in the server config as well\n\n[Peer]\nPublicKey = <Server Public key>\nAllowedIPs = 10.0.0.0/24 # Routes all traffic in this subnet to the server. If you want to tunnel all traffic through the wireguard connection, use 0.0.0.0/0 here instead\nEndpoint = <Public Server IP>:51820\nPersistentKeepalive = 25 # Optional. Will ping the server every 25 seconds to remain connected.\n```\n\nOn every client, run `wg-quick up wg0` to start the interface using the config at `/etc/wireguard/wg0.conf`.\n\nThis whole proccess might be easier on GUIs like Android or MacOS.\n\nNow, try to ping your phone from your laptop:\n\n```\nping 10.0.0.3\nPING 10.0.0.3 (10.0.0.3) 56(84) bytes of data.\n64 bytes from 10.0.0.3: icmp_seq=1 ttl=64 time=5382 ms\n64 bytes from 10.0.0.3: icmp_seq=2 ttl=64 time=4364 ms\n```\n\n### References\n\n- [Official Documentation](https://www.wireguard.com/)\n- [https://www.stavros.io/posts/how-to-configure-wireguard/](https://www.stavros.io/posts/how-to-configure-wireguard/)\n","frontmatter":{"title":"Quick Tip! Setting up a lightweight Server-Client VPN with wireguard","date":"2020-08-19","tags":"infrastructure, guide, homelab"},"tags":["infrastructure","guide","homelab"]},"recommendedPosts":[{"slug":"2024-09-24-installing-mssql-client-drivers-for-a-php-application","frontmatter":{"title":"Installing MSSQL Client Drivers for a PHP Application","date":"2024-09-24","tags":"guide, note, web, tech, programming, php"},"tags":["guide","note","web","tech","programming","php"]},{"slug":"2024-06-27-testing-smtp-connections","frontmatter":{"title":"Testing SMTP connections","date":"2024-06-27","tags":"infrastructure, guide, note, learnings, tech"},"tags":["infrastructure","guide","note","learnings","tech"]},{"slug":"2024-06-17-host-your-own-llm","frontmatter":{"title":"Host your own LLM","date":"2024-06-17","tags":"infrastructure, guide, note, homelab, tech, llm, ai"},"tags":["infrastructure","guide","note","homelab","tech","llm","ai"]},{"slug":"2024-06-03-i-just-cleaned-up-40-gb-of-brew-caches","frontmatter":{"title":"I just cleaned up 40 GB of Brew caches","date":"2024-06-03","tags":"guide, note, tech"},"tags":["guide","note","tech"]},{"slug":"2024-05-24-going-from-self-hosted-to-managed-software","frontmatter":{"title":"Going from self hosted to managed software","date":"2024-05-24","tags":"infrastructure, note, learnings, opinion, homelab, tech"},"tags":["infrastructure","note","learnings","opinion","homelab","tech"]}]},"__N_SSG":true}