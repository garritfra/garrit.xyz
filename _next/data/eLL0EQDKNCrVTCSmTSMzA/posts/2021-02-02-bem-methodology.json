{"pageProps":{"post":{"slug":"2021-02-02-bem-methodology","markdownBody":"\nIn the coming weeks, months and years, I will be working on frontend-development as part of my dayjob. These are some personal notes I took during my research about the BEM methodology. If you want to read the official introduction, you should visit [their website](http://getbem.com/).\n\n# Overview - What is BEM?\n\nBEMâ€Šâ€”â€ŠBlock Element Modifier is a methodology that helps you to create reusable components and code sharing in front-end development. It aims to group css-classes in a meaningful way, making it easier to understand\n\n1. where this class is used\n2. what it describes and\n3. what state the element is in.\n\nThe BEM-notation is divided into three main parts: Blocks, Elements and Modifiers.\n\n## Blocks\n\nA standalone entity that is meaningful on its own. Some examples might be **headers, containers, menus, inputs, checkboxes**, etc.\n\n## Elements\n\nA part of a block that has no standalone meaning and is semantically tied to its block. This could be a **menu item or an input placeholder**.\n\n## Modifiers\n\nA flag on a block or an element. Used to change appearance or behavior. This might be **disabled, checked, fixed, big**, etc.\n\n# Putting it together\n\nA block itself is referenced though its name.\n\n```css\n.button {\n}\n```\n\nTo reference elements inside of the block, you add it to the block element with two underscores (`__`):\n\n```css\n.button {\n}\n.button__text {\n}\n```\n\nIf you want to add a modifier to a block or an element, you separate it with two dashes (`--`):\n\n```css\n.button {\n}\n.button--disabled {\n}\n.button__text--inverted {\n}\n```\n\n# Benefits of BEM\n\n**Modularity**: Block styles never depend on one another. They can easily be moved to other parts of the app.\n\n**Reusability**: Composing styles in a meaningful way reduces the amount of code duplication.\n\n**Structure**: BEM gives your code a solid structure that is both easy to understand and to expand.\n\n# References\n\n- http://getbem.com/\n- https://csswizardry.com/2013/01/mindbemding-getting-your-head-round-bem-syntax/\n\nThis is post 009 of [#100DaysToOffload](https://100daystooffload.com/).\n","frontmatter":{"title":"Notes about BEM (Block Element Modifier)","date":"2021-02-02","tags":"note, css, 100DaysToOffload, programming, tech"},"tags":["note","css","100DaysToOffload","programming","tech"]},"recommendedPosts":[{"slug":"2024-09-24-installing-mssql-client-drivers-for-a-php-application","frontmatter":{"title":"Installing MSSQL Client Drivers for a PHP Application","date":"2024-09-24","tags":"guide, note, web, tech, programming, php"},"tags":["guide","note","web","tech","programming","php"]},{"slug":"2024-08-31-sentiment-analysis-using-ml-models","frontmatter":{"title":"Sentiment analysis using ML models","date":"2024-08-31","tags":"note, tech, ai"},"tags":["note","tech","ai"]},{"slug":"2024-08-03-how-embedding-models-encode-semantic-meaning","frontmatter":{"title":"How embedding models encode semantic meaning","date":"2024-08-03","tags":"note, tech, math, llm, ai"},"tags":["note","tech","math","llm","ai"]},{"slug":"2024-07-02-linkdump-llms","frontmatter":{"title":"ðŸ”— Linkdump: LLMs","date":"2024-07-02","tags":"note, tech, linkdump, llm, ai"},"tags":["note","tech","linkdump","llm","ai"]},{"slug":"2024-06-27-testing-smtp-connections","frontmatter":{"title":"Testing SMTP connections","date":"2024-06-27","tags":"infrastructure, guide, note, learnings, tech"},"tags":["infrastructure","guide","note","learnings","tech"]}]},"__N_SSG":true}